jdbc.driverClassName=org.mariadb.jdbc.Driver
jdbc.url=jdbc:mariadb://localhost:3306/tp3
jdbc.user=root
jdbc.pass=1234

hibernate.dialect=org.hibernate.dialect.MariaDBDialect
hibernate.show_sql=true
hibernate.hbm2ddl.auto=update
hibernate.cache.use_second_level_cache=false
hibernate.cache.use_query_cache=false

##datasource configurations
#spring.datasource.url=jdbc:mariadb://localhost:3306/Marcelo
#spring.datasource.username=root
#spring.datasource.password=1234
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#
## DDL generation
#spring.jpa.generate-ddl=true
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.tomcat.test-while-idle=true
#spring.datasource.tomcat.validation-query=SELECT 1
#
## ===============================
## = JPA / HIBERNATE
## ===============================
## Show or not log for each sql query
#spring.jpa.show-sql=true
## Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
## schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
## Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect